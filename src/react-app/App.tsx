import { useState } from "react";

// две строки на ключ: [0] — группа A, [1] — группа B
const vowTemplates: Record<string, [string, string]> = {
  // 1 — Безопасность и забота
  "1|Слова поддержки": [
    "Твои волнения — в моих словах тишина, дыши спокойно.",
    "Береги эту строчку, как адрес дома, когда штормит."
  ],
  "1|Время вместе": [
    "С тобой время течёт медленнее, и это наш секрет.",
    "Ловим тихие часы, чтобы потом светить ими в темноте."
  ],
  "1|Подарки": [
    "Дарю мелочь с теплом ладони — пусть греет карман.",
    "Этот кулон — точка на карте, где всегда светло."
  ],
  "1|Помощь": [
    "Если мир давит, отдай груз мне — понесу молча.",
    "Мой ход — твой выдох. Дальше идём легко."
  ],
  "1|Прикосновения": [
    "Обниму — и шум улицы станет фоном.",
    "Пальцы сплелись — пароль: мы дома."
  ],

  // 2 — Притяжение и страсть
  "2|Слова поддержки": [
    "Твой голос — искра; подкину слов, чтоб пламя держалось.",
    "Запишем нашу жару в трек, чтобы играть на повторе."
  ],
  "2|Время вместе": [
    "Крадём ночь, чтобы сжечь её вдвоём.",
    "Каждый рассвет — новая вспышка для нас."
  ],
  "2|Подарки": [
    "Дарю огонь в металле — носи, чтоб грел.",
    "Брелок щёлкнет вспышкой, когда вспомнишь меня."
  ],
  "2|Помощь": [
    "Когда жар слишком дикий, подставлю плечо, не туша огонь.",
    "Разгоню ветер, чтоб пламя танцевало ровно."
  ],
  "2|Прикосновения": [
    "Одно касание — и кожа пишет ритм.",
    "Сохраним этот жар, как тату без чернил."
  ],

  // 3 — Поддержка и признание
  "3|Слова поддержки": [
    "Твоя сила видна, но я напомню вслух, чтоб мир услышал.",
    "Комплимент в кармане — медаль, что блестит только тебе."
  ],
  "3|Время вместе": [
    "Празднуем твой апгрейд чаём в три ночи.",
    "Каждый левел-ап фиксируем нашим тостом."
  ],
  "3|Подарки": [
    "Знак твоей победы — носи, чтоб улыбаться чаще.",
    "Значок поймает свет и вспомнит твой первый шаг."
  ],
  "3|Помощь": [
    "Уберу тени, чтобы ты вышла в центр кадра.",
    "Разгребу дорогу, аплодисменты твои."
  ],
  "3|Прикосновения": [
    "Обниму — и слышу, как растёт твой вайб.",
    "Щелчок ладоней — стартовый гонг успеха."
  ],

  // 4 — Забота и принятие
  "4|Слова поддержки": [
    "Говорю просто: с тобой всё ок, будь любой.",
    "Эта строчка — плед, который всегда под рукой."
  ],
  "4|Время вместе": [
    "Делаю паузу в мире для твоего спокойного дыхания.",
    "Наше медленное воскресенье лечит недели."
  ],
  "4|Подарки": [
    "Чашка света, чтобы помнить: тебя любят без условий.",
    "Сердечный брелок отзывается, когда сердце дрожит."
  ],
  "4|Помощь": [
    "Тихо решаю бытовое, чтобы ты перезагрузилась.",
    "Стираю лишний шум, оставляю тишину."
  ],
  "4|Прикосновения": [
    "Касаюсь — и мир говорит «ты принята».",
    "Объятие-якорь держит нас при любой погоде."
  ],

  // 5 — Общие смыслы и видение
  "5|Слова поддержки": [
    "Мои слова — мост для твоих идей, пусть шагают дальше.",
    "Мантра курса напомнит, куда мы летим, когда шумно."
  ],
  "5|Время вместе": [
    "Чертим карты будущего за ночным чаем.",
    "Вторник мечт — дата, что не сотрёшь."
  ],
  "5|Подарки": [
    "Карандаш будущего — рисуй смелее.",
    "Мини-глобус напоминает о точках, что свяжем вместе."
  ],
  "5|Помощь": [
    "Беру цифры и быт, чтоб твоя идея звучала громче.",
    "Снимаю рутину, освобождаю небо планам."
  ],
  "5|Прикосновения": [
    "Ладонь к ладони — курс на дальние орбиты.",
    "Наш тайный жест держит направление."
  ],

  // 6 — Вдохновение и интуиция
  "6|Слова поддержки": [
    "Шепчу: верю в твою искру, пусть горит.",
    "Слово-искра вспыхнет, когда темно вокруг."
  ],
  "6|Время вместе": [
    "Считаем звёзды — ищем идеи в их свете.",
    "Минута на крыше — килобайт вдохновения."
  ],
  "6|Подарки": [
    "Дарю чистый лист — дай миру новый трек.",
    "Кристалл ловит лучи, кидает радугу идей."
  ],
  "6|Помощь": [
    "Сниму землю с твоих крыльев — лети легко.",
    "Чищу календарь, чтобы озарения входили без стука."
  ],
  "6|Прикосновения": [
    "Касание пальцев — сигнал вселенной «да».",
    "Искра кожи соединяет мысль и сердце."
  ],

  // 7 — Тишина и слияние
  "7|Слова поддержки": [
    "Слышу нашу тишину и даю ей имя — мы.",
    "Пауза хранит нас, когда слова шумят."
  ],
  "7|Время вместе": [
    "Сидим в молчании, время растворяется.",
    "Новолуние тишины держит нас цельными."
  ],
  "7|Подарки": [
    "Камень моря несёт глубину нашего молчания.",
    "Он шепчет о нас, когда пальцы ищут покой."
  ],
  "7|Помощь": [
    "Убираю шум, чтобы тишина снова обняла.",
    "Чищу пространство, остаётся чистое эхо."
  ],
  "7|Прикосновения": [
    "Одно молчаливое касание — и мы целы.",
    "Ладонь к сердцу — биты замирают в унисон."
  ]
};


export const chakraCTA: Record<string, string> = {
  "1": "Сохрани свою любовь — пусть она всегда будет твоей тихой гаванью.",
  "2": "Зафиксируй пламя этого чувства — и пусть оно вспыхивает вновь, где бы вы ни были.",
  "3": "Пусть ваша клятва станет символом силы, которую вы дарите друг другу.",
  "4": "Сохрани вашу нежность в блокчейне, как память о принятии и любви.",
  "5": "Зафиксируй общее видение, чтобы всегда помнить, куда вы идёте вместе.",
  "6": "Сохрани эту искру вдохновения — как свидетельство вашей уникальной связи.",
  "7": "Закрепи вашу тишину и слияние навсегда — как точку возвращения к любви."
};

export const chakraQualitiesNoun: Record<string, string> = {
  "1": "тишину",
  "2": "пламя",
  "3": "силу",
  "4": "любовь",
  "5": "глубину",
  "6": "свет",
  "7": "тишину"
};

export const chakraQualitiesGen: Record<string, string> = {
  "1": "тишины",
  "2": "пламени",
  "3": "силы",
  "4": "любви",
  "5": "глубины",
  "6": "света",
  "7": "тишины"
};

export const channelLabels: Record<string, string> = {
  "Слова поддержки": "твои слова",
  "Время вместе": "твои поступки",
  "Подарки": "твои знаки",
  "Помощь": "твою заботу",
  "Прикосновения": "твои прикосновения"
};

export const channelEndings: Record<string, string> = {
  "Слова поддержки": "твои слова — я слышу в них твоё сердце",
  "Время вместе": "наше время вместе — в нём я чувствую, как ты со мной",
  "Подарки": "твои знаки — в каждом из них то, как ты любишь",
  "Помощь": "твоя забота — и в ней твоя нежность слышна без слов",
  "Прикосновения": "твои прикосновения — в каждом касании живёшь ты"
};

export const seeingVerb: Record<string, string> = {
  "1": "знаю",
  "2": "ощущаю всем телом",
  "3": "принимаю",
  "4": "чувствую",
  "5": "слышу",
  "6": "вижу",
  "7": "улавливаю"
};

export const soulVerb: Record<string, string> = {
  "1": "покоится",
  "2": "вспыхивает",
  "3": "укрепляется",
  "4": "мягко раскрывается",
  "5": "отражается",
  "6": "поёт",
  "7": "затихает"
};

export const buildVerb: Record<string, string> = {
  "1": "сохранять",
  "2": "разжигать",
  "3": "укреплять",
  "4": "оберегать",
  "5": "направлять",
  "6": "вдохновлять",
  "7": "собирать в тишине"
};

export const spaceImage: Record<string, string> = {
  "1": "остров спокойствия",
  "2": "вспышка чувств",
  "3": "надёжная опора",
  "4": "уютное пространство",
  "5": "пространство замысла",
  "6": "звучащее пространство",
  "7": "молчаливое присутствие"
};

export const growthVerb: Record<string, string> = {
  "Слова поддержки": "прорастать",
  "Время вместе": "укрепляться",
  "Подарки": "накапливаться",
  "Помощь": "раскрываться",
  "Прикосновения": "оживать"
};

export const imagePhrase: Record<string, string> = {
  "1": "домом, где спокойно",
  "2": "огнём, который зовёт",
  "3": "опорой, в которую верят",
  "4": "теплом, к которому хочется возвращаться",
  "5": "местом, где оживают смыслы",
  "6": "пространством, где рождаются идеи",
  "7": "тишиной, где всё сливается в одно"
};

export function generateStructuredVow(data: string[]): {
  text: [string, React.ReactNode][];
  selfExample?: [string, string];
  partnerExample?: [string, string];
} {
  const [myFeel, myLang, partnerFeel, partnerLang] = data;

  const q2 = chakraQualitiesNoun[partnerFeel] || partnerFeel;
  const c2 = channelLabels[partnerLang] || partnerLang;
  const q3 = chakraQualitiesGen[myFeel] || myFeel;
  const c3 = channelLabels[myLang] || myLang;

  const see = seeingVerb[partnerFeel];
  const imageDetail = imagePhrase[partnerFeel];
  const soul = soulVerb[myFeel];
  const verb = buildVerb[myFeel];
  const space = spaceImage[myFeel];
  const grow = growthVerb[myLang];

  const selfKey = `${myFeel}|${myLang}`;
  const partnerKey = `${partnerFeel}|${partnerLang}`;

  return {
    text: [
      ["📍 Открытие", <>В этот момент, когда мир замер вокруг нас, я хочу сказать…</>],
      ["💬 О нём", <>
        Я знаю, что в тебе живёт <i>{q2}</i>, и именно <i>{c2}</i>.<br/>
        Я берегу это в себе, чтобы ты чувствовала себя рядом со мной — <i>{imageDetail}</i>.
      </>],
      ["🫶 О себе", <>
       Моя любовь рождается из <i>{q3}</i>.<br/>Когда <i>{c3}</i>, моя душа <i>{soul}</i>.
      </>],
      ["🤝 Обещание", <>
        И я обещаю <i>{verb}</i> <i>{space}</i>, где наши чувства будут <i>{grow}</i> с каждым днём.
      </>],
      ["❤️ Финал", <>Я люблю тебя — сегодня, завтра и всегда.</>]
    ],
    selfExample: vowTemplates[selfKey],
    partnerExample: vowTemplates[partnerKey]
  };
}



const welcomeText =
  "Этот сервис поможет тебе выразить свою любовь и быть понятной именно твоей половинкой. Это серия из 4 вопросов настройки и списка рекомендаций.";

const startButtonText = "Начать";

const copyrightText =
  "Сервис бесплатный. Основан на разработках non profit R&D проекта Now You Can See love и запатентованой программе Чакроскоп.";

const chakraOptions = [
  { id: "1", label: "Безопасность и забота" },
  { id: "2", label: "Притяжение и страсть" },
  { id: "3", label: "Поддержка и признание" },
  { id: "4", label: "Забота и принятие" },
  { id: "5", label: "Общие смыслы и видение" },
  { id: "6", label: "Вдохновение и интуиция" },
  { id: "7", label: "Тишина и слияние" }
];

const langOptions = Object.entries(langChannels).map(([id, label]) => ({ id, label }));

const questions = [
  {
    text: "Как ты чувствуешь любовь?",
    options: chakraOptions
  },
  {
    text: "Как ты воспринимаешь любовь?",
    options: langOptions
  },
  {
    text: "Как твоя половинка чувствует любовь?",
    options: chakraOptions
  },
  {
    text: "Как она воспринимает любовь?",
    options: langOptions
  }
];

export default function App() {
  const [step, setStep] = useState(-1);
  const [answers, setAnswers] = useState<string[]>([]);

  const handleOptionClick = (value: string) => {
    const newAnswers = [...answers];
    newAnswers[step] = value;
    setAnswers(newAnswers);
    setStep(step + 1);
  };

  const result = answers.length === 4 ? generateStructuredVow(answers) : null;
  const chakraCtaLine = chakraCTA[answers[0]] || "Сохрани эту вибрацию на блокчейне любви.";

  return (
    <div style={{ fontFamily: "'EB Garamond', serif", backgroundColor: "white", color: "#222", padding: "2rem", maxWidth: "640px", margin: "0 auto", textAlign: "center" as const }}>
      {step === -1 ? (
        <>
          <p style={{ fontSize: "1.1rem", lineHeight: "1.6" }}>{welcomeText}</p>
          <button style={{ padding: "0.5rem 1.2rem", background: "black", color: "white", borderRadius: "999px", border: "none", cursor: "pointer", marginTop: "1rem" }} onClick={() => setStep(0)}>
            {startButtonText}
          </button>
          <p style={{ fontSize: "0.8rem", color: "#666", marginTop: "2rem" }}>{copyrightText}</p>
        </>
      ) : step < questions.length ? (
        <div>
          <h2 style={{ fontWeight: "bold", fontSize: "1.2rem", marginBottom: "1rem" }}>{questions[step].text}</h2>
          <div style={{ display: "flex", flexWrap: "wrap", gap: "0.5rem", justifyContent: "center" }}>
            {questions[step].options.map(({ id, label }) => (
              <button
                key={id}
                style={{ padding: "0.5rem 1.2rem", background: "#eee", color: "#000", borderRadius: "999px", border: "none", cursor: "pointer" }}
                onClick={() => handleOptionClick(id)}
              >
                {label}
              </button>
            ))}
          </div>
        </div>
      ) : (
        <div style={{ marginTop: "1.5rem" }}>
          <h2 style={{ fontWeight: "bold", fontSize: "1.4rem", marginBottom: "1.5rem" }}>Твоя клятва любви</h2>
          {result?.text.map(([label, jsx], idx) => {
            const showHint = idx === 1 || idx === 2;
            const hintLeft = idx === 1 ? "сказать личное и важное о его" : "сказать от сердца о себе";
            const hintRight = idx === 1 ? "привести пример про" : "показать свой способ любви";

            return (
              <div key={idx} style={{ display: "flex", gap: "2rem", alignItems: "flex-start", marginBottom: "2.5rem" }}>
                <div style={{ flex: 1, fontFamily: "Helvetica, sans-serif", fontSize: "0.75rem", color: "#888", lineHeight: 1.4 }}>
                  <div style={{ marginBottom: "0.5rem" }}>{label}</div>
                  {showHint && (
                    <>
                      <div style={{ marginBottom: "0.3rem" }}>{hintLeft}</div>
                      <div>{hintRight}</div>
                    </>
                  )}
                </div>
                <div style={{ flex: 3 }}>
                  <p style={{ fontSize: "1.6rem", lineHeight: "1.6", fontWeight: 400 }}>{jsx}</p>
                  {idx === 1 && result?.partnerExample && (
                    <div style={{ marginTop: "1rem" }}>
                      <div style={{ fontSize: "0.8rem", marginBottom: "0.4rem", fontFamily: "Helvetica, sans-serif", color: "#444" }}>
                        Если ты хочешь усилить блок «О нём» — можешь использовать что-то из этих фраз:
                      </div>
                      <p style={{ fontStyle: "italic", marginBottom: "0.4rem" }}>“{result.partnerExample[0]}”</p>
                      <p style={{ fontStyle: "italic" }}>“{result.partnerExample[1]}”</p>
                    </div>
                  )}
                  {idx === 2 && result?.selfExample && (
                    <div style={{ marginTop: "1rem" }}>
                      <div style={{ fontSize: "0.8rem", marginBottom: "0.4rem", fontFamily: "Helvetica, sans-serif", color: "#444" }}>
                        Если ты хочешь усилить блок «О себе» — можешь использовать что-то из этих фраз:
                      </div>
                      <p style={{ fontStyle: "italic", marginBottom: "0.4rem" }}>“{result.selfExample[0]}”</p>
                      <p style={{ fontStyle: "italic" }}>“{result.selfExample[1]}”</p>
                    </div>
                  )}
                </div>
              </div>
            );
          })}

          <div style={{ borderTop: "1px solid #ccc", paddingTop: "1.5rem", fontSize: "0.9rem", color: "#444" }}>
            <p style={{ lineHeight: "1.5" }}>
              Твои клятвы — какими бы они ни были — говори от сердца, и они будут самыми правильными.<br />
              Мы создали сервис <a href="https://web3wed.io" target="_blank" style={{ color: "#000", textDecoration: "underline" }}>web3wed.io</a>, чтобы вы могли сохранить их навсегда. <b>{chakraCtaLine}</b>
            </p>
          </div>
        </div>
      )}
    </div>
  );
}
